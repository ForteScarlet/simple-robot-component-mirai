<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>love.forte.simple-robot-component</groupId>
    <artifactId>component-mirai</artifactId>

    <!-- 1.8.2-1.16-release 2020/9/9 -->
    <version>1.8.2-1.16</version>

    <properties>
        <hutool.versin>5.3.8</hutool.versin>
        <concurrentlinkedhashmap.version>1.4.2</concurrentlinkedhashmap.version>

        <!-- mirai -->
        <mirai.version>1.2.2</mirai.version>
        <mirai-serialization.version>1.1.3</mirai-serialization.version>

        <!-- simbot core -->
        <simple-robot-core.version>1.16.3</simple-robot-core.version>
        <cqcodeUtils.version>1.8.0-BETA.3</cqcodeUtils.version>

        <!-- kt properties -->
        <kotlin.compiler.jvmTarget>1.8</kotlin.compiler.jvmTarget>
        <kotlin.version>1.4.0</kotlin.version>
        <kotlinx-coroutines-core.version>1.3.9</kotlinx-coroutines-core.version>
        <kotlinx-serialization.version>1.0.0-RC</kotlinx-serialization.version>


    </properties>

    <name>simple-robot-component-mirai</name>
    <description>a simple-robot component for mirai</description>
    <scm>
        <url>https://github.com/ForteScarlet/simple-robot-component-mirai</url>
    </scm>
    <url>https://github.com/ForteScarlet/simple-robot-component-mirai</url>

    <dependencies>
        <dependency>
            <groupId>io.github.ForteScarlet</groupId>
            <artifactId>simple-robot-core</artifactId>
            <version>${simple-robot-core.version}</version>
        </dependency>

        <dependency>
            <groupId>io.github.ForteScarlet.simple-robot-module</groupId>
            <artifactId>mod-cqcodeutils</artifactId>
            <version>${cqcodeUtils.version}</version>
        </dependency>

        <dependency>
            <groupId>cn.hutool</groupId>
            <artifactId>hutool-crypto</artifactId>
            <version>${hutool.versin}</version>
        </dependency>

        <!-- concurrentlinkedhashmap -->
        <dependency>
            <groupId>com.googlecode.concurrentlinkedhashmap</groupId>
            <artifactId>concurrentlinkedhashmap-lru</artifactId>
            <version>${concurrentlinkedhashmap.version}</version>
        </dependency>

        <!-- https://bintray.com/him188moe/mirai/mirai-core -->
        <dependency>
            <groupId>net.mamoe</groupId>
            <artifactId>mirai-core</artifactId>
            <version>${mirai.version}</version>
        </dependency>

        <!-- https://bintray.com/him188moe/mirai/mirai-core-qqandroid -->
        <dependency>
            <groupId>net.mamoe</groupId>
            <artifactId>mirai-core-qqandroid</artifactId>
            <version>${mirai.version}</version>
        </dependency>

        <!-- mirai serialization  -->
        <dependency>
            <groupId>net.mamoe</groupId>
            <artifactId>mirai-serialization</artifactId>
            <version>${mirai-serialization.version}</version>
            <optional>true</optional>
            <scope>test</scope>
        </dependency>

        <!-- kt -->
        <dependency>
            <groupId>org.jetbrains.kotlin</groupId>
            <artifactId>kotlin-stdlib-jdk8</artifactId>
            <version>${kotlin.version}</version>
        </dependency>
        <!-- kt -->
        <dependency>
            <groupId>org.jetbrains.kotlin</groupId>
            <artifactId>kotlin-stdlib</artifactId>
            <version>${kotlin.version}</version>
        </dependency>

        <!-- ktx coroutines core -->
        <dependency>
            <groupId>org.jetbrains.kotlinx</groupId>
            <artifactId>kotlinx-coroutines-core</artifactId>
            <version>${kotlinx-coroutines-core.version}</version>
        </dependency>

        <!-- ktx - serialization core -->
        <dependency>
            <groupId>org.jetbrains.kotlinx</groupId>
            <artifactId>kotlinx-serialization-core</artifactId>
            <version>${kotlinx-serialization.version}</version>
            <optional>true</optional>
            <scope>test</scope>
        </dependency>

        <!-- kt-test -->
        <dependency>
            <groupId>org.jetbrains.kotlin</groupId>
            <artifactId>kotlin-test</artifactId>
            <version>${kotlin.version}</version>
            <scope>test</scope>
            <optional>true</optional>
        </dependency>

    </dependencies>

    <!-- 额外的仓库 -->
    <repositories>
        <repository>
            <id>jcenter</id>
            <url>https://jcenter.bintray.com/</url>
        </repository>
    </repositories>

    <build>
        <plugins>
            <!-- kt & java -->
            <!-- java 版本 -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>3.7.0</version>
                <executions>
                    <!-- 替换会被 maven 特别处理的 default-compile -->
                    <execution>
                        <id>default-compile</id>
                        <phase>none</phase>
                    </execution>
                    <!-- 替换会被 maven 特别处理的 default-testCompile -->
                    <execution>
                        <id>default-testCompile</id>
                        <phase>none</phase>
                    </execution>
                    <execution>
                        <id>java-compile</id>
                        <phase>compile</phase>
                        <goals>
                            <goal>compile</goal>
                        </goals>
                    </execution>
                    <execution>
                        <id>java-test-compile</id>
                        <phase>test-compile</phase>
                        <goals>
                            <goal>testCompile</goal>
                        </goals>
                    </execution>
                </executions>
                <configuration>
                    <source>1.8</source>
                    <target>1.8</target>
                    <compilerArgs>
                        <arg>-parameters</arg>
                    </compilerArgs>
                </configuration>
            </plugin>

            <!-- kt -->
            <plugin>
                <groupId>org.jetbrains.kotlin</groupId>
                <artifactId>kotlin-maven-plugin</artifactId>
                <version>${kotlin.version}</version>
                <executions>
                    <execution>
                        <id>compile</id>
                        <phase>process-sources</phase>
                        <goals>
                            <goal>compile</goal>
                        </goals>
                    </execution>
                </executions>
                <configuration>
                    <!-- kotlinOptions.freeCompilerArgs = ['-Xjvm-default=enable'] -->
                    <args>
                        <arg>-Xjvm-default=enable</arg>
                        <arg>-Xinline-classes</arg>
                    </args>
                    <compilerPlugins>
                        <!-- kt serialization plugin -->
                        <plugin>kotlinx-serialization</plugin>
                    </compilerPlugins>
                    <jvmTarget>1.8</jvmTarget>
                </configuration>
                <dependencies>
                    <dependency>
                        <groupId>org.jetbrains.kotlin</groupId>
                        <artifactId>kotlin-maven-serialization</artifactId>
                        <version>${kotlin.version}</version>
                    </dependency>
                </dependencies>
            </plugin>

            <!-- maven仓库相关插件 -->
            <!-- (1) deploy插件 -->
            <plugin>
                <artifactId>maven-deploy-plugin</artifactId>
                <version>2.8.2</version>
                <executions>
                    <execution>
                        <id>default-deploy</id>
                        <phase>deploy</phase>
                        <goals>
                            <goal>deploy</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>

            <!-- （2）sonatype的staging插件 -->
            <plugin>
                <groupId>org.sonatype.plugins</groupId>
                <artifactId>nexus-staging-maven-plugin</artifactId>
                <version>1.6.7</version>
                <extensions>true</extensions>
                <configuration>
                    <serverId>oss</serverId>
                    <nexusUrl>https://oss.sonatype.org/</nexusUrl>
                    <autoReleaseAfterClose>true</autoReleaseAfterClose>
                </configuration>
            </plugin>

            <!-- （3）SCM插件 -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-scm-plugin</artifactId>
                <version>1.8.1</version>
            </plugin>

            <!-- （4）release插件，下面checkModificationExcludes是排除一些目录文件不要发布。 -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-release-plugin</artifactId>
                <version>2.5.3</version>
                <configuration>
                    <mavenExecutorId>forked-path</mavenExecutorId>
                    <useReleaseProfile>false</useReleaseProfile>
                    <arguments>-Psonatype-oss-release</arguments>
                    <pushChanges>false</pushChanges>
                    <localCheckout>false</localCheckout>
                    <autoVersionSubmodules>true</autoVersionSubmodules>
                    <checkModificationExcludes>
                        <checkModificationExclude>.idea/</checkModificationExclude>
                        <checkModificationExclude>.idea/*</checkModificationExclude>
                        <checkModificationExclude>test/</checkModificationExclude>
                        <checkModificationExclude>test/*</checkModificationExclude>
                        <checkModificationExclude>.idea/libraries/*</checkModificationExclude>
                        <checkModificationExclude>pom.xml</checkModificationExclude>
                        <checkModificationExclude>release-pom.xml</checkModificationExclude>

                        <checkModificationExclude>jdonframework.iml</checkModificationExclude>
                        <checkModificationExclude>JdonAccessory/jdon-hibernate3x/jdon-hibernate3x.iml
                        </checkModificationExclude>
                        <checkModificationExclude>JdonAccessory/jdon-jdbc/jdon-jdbc.iml</checkModificationExclude>
                        <checkModificationExclude>JdonAccessory/jdon-remote/jdon-remote.iml</checkModificationExclude>
                        <checkModificationExclude>JdonAccessory/jdon-struts1x/jdon-struts1x.iml
                        </checkModificationExclude>
                    </checkModificationExcludes>
                </configuration>
                <dependencies>
                    <dependency>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-scm-plugin</artifactId>
                        <version>1.8.1</version>
                    </dependency>
                </dependencies>
            </plugin>

            <!-- java源码 -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-source-plugin</artifactId>
                <version>3.0.0</version>
                <configuration>
                    <attach>true</attach>
                </configuration>
                <executions>
                    <execution>
                        <phase>compile</phase>
                        <goals>
                            <goal>jar-no-fork</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>

            <!-- javadoc -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-javadoc-plugin</artifactId>
                <version>2.9.1</version>
                <configuration>
                    <encoding>UTF-8</encoding>
                    <aggregate>true</aggregate>
                    <charset>UTF-8</charset>
                    <docencoding>UTF-8</docencoding>
                </configuration>
                <executions>
                    <execution>
                        <id>attach-javadocs</id>
                        <goals>
                            <goal>jar</goal>
                        </goals>
                        <configuration>
                            <additionalparam>-Xdoclint:none</additionalparam>
                        </configuration>
                    </execution>
                </executions>
            </plugin>

            <!--
            第3步：进行GPG签名加密，
            这是对生成的jar包，javadoc包等进行签名加密，
            保证你的文件上传到服务器过程中不会被拦截和破解安全，服务器那边使用你提供的密钥对进行解密。
            在pom.xml的build一级目录下的plugins里面加入下面：
            -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-gpg-plugin</artifactId>
                <version>1.5</version>
                <executions>
                    <execution>
                        <id>sign-artifacts</id>
                        <phase>verify</phase>
                        <goals>
                            <goal>sign</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
        </plugins>
    </build>

    <!-- maven相关配置 -->
    <licenses>
        <license>
            <name>The Apache License, Version 2.0</name>
            <url>http://www.apache.org/licenses/LICENSE-2.0.txt</url>
        </license>
    </licenses>


    <!-- 开发者信息 -->
    <developers>
        <developer>
            <roles>
                <role>a single programmer</role>
            </roles>
            <name>ForteScarlet</name>
            <!-- 项目开发者的email -->
            <email>ForteScarlet@163.com</email>
        </developer>
    </developers>


    <distributionManagement>
        <snapshotRepository>
            <id>oss</id>
            <url>https://oss.sonatype.org/content/repositories/snapshots</url>
        </snapshotRepository>
        <repository>
            <id>oss</id>
            <url>https://oss.sonatype.org/service/local/staging/deploy/maven2/</url>
        </repository>
    </distributionManagement>


    <profiles>
        <profile>
            <id>release</id>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.sonatype.plugins</groupId>
                        <artifactId>nexus-staging-maven-plugin</artifactId>
                        <version>1.6.7</version>
                        <extensions>true</extensions>
                        <configuration>
                            <serverId>oss</serverId>
                            <nexusUrl>https://oss.sonatype.org/</nexusUrl>
                            <autoReleaseAfterClose>true</autoReleaseAfterClose>
                        </configuration>
                    </plugin>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-gpg-plugin</artifactId>
                        <version>1.5</version>
                        <executions>
                            <execution>
                                <id>sign-artifacts</id>
                                <phase>verify</phase>
                                <goals>
                                    <goal>sign</goal>
                                </goals>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>
    </profiles>

</project>